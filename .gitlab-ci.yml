stages:
  - validate
  - deploy

before_script:
  - export GOPATH=${CI_PROJECT_DIR}/.cache
  - export PATH="${PATH}:${GOPATH}/bin"

Lint:
  image: golangci/golangci-lint:latest
  stage: validate
  script:
    - golangci-lint run -v
  only:
    - main
    - master
    - merge_requests

Run Tests:
  image: golang:1.20
  stage: validate
  script:
    - go fmt $(go list ./... | grep -v /tests)
    - go vet $(go list ./... | grep -v /tests)
    - go test -race $(go list ./... | grep -v /tests)
  only:
    - main
    - master
    - merge_requests

Deploy Module:
  image: node:16.16.0
  stage: deploy
  variables:
    ENVIRONMENT: production
    VANGEN_VERSION: "1.4.0"
  before_script:
    - curl -sSL https://github.com/leighmcculloch/vangen/releases/download/v${VANGEN_VERSION}/vangen_${VANGEN_VERSION}_linux_amd64.tar.gz | tar xz -C /usr/local/bin vangen
    - npm install -g vercel
  script:
    - |
      set -eo pipefail

      [[ -z $VERCEL_TOKEN ]] && echo "VERCEL_TOKEN is not set" && exit 1
      [[ -z $ENVIRONMENT ]] && echo "ENVIRONMENT is not set" && exit 1

      [[ ! $(command -v vangen) ]] && echo "Please install vangen" && exit 1
      [[ ! $(command -v vercel) ]] && echo "Please install vercel" && exit 1

      # build the static site with go meta tags
      vangen -config .vangen/vangen.json -out www/

      # deploy the static site to vercel
      vercel pull --yes --cwd ./www/ --environment=$ENVIRONMENT --token=$VERCEL_TOKEN
      vercel build --cwd ./www/ --token=$VERCEL_TOKEN
      [[ $ENVIRONMENT == "preview" ]] && vercel deploy --cwd ./www/ --prebuilt --token=$VERCEL_TOKEN || vercel deploy --cwd ./www/ --prebuilt --prod --token=$VERCEL_TOKEN

      echo "Deployment to $ENVIRONMENT complete!"
  when: manual
  only:
    - tags
